# name: main branch CI

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v3
    
#     - name: cache apt
#       uses: actions/cache@v3
#       id: cache-apt
#       with:
#         path: "~/cache-apt"
#         key: cache-apt

#     - name: install dependencies
#       env:
#         CACHE_HIT: ${{steps.cache-apt.outputs.cache-hit}}
#       run: |
#           if [[ "$CACHE_HIT" == 'true' ]]; then
#             ls -la ~/cache-apt
#             sudo cp --verbose --force --recursive ~/cache-apt/* /
#           else
#             sudo apt-get update -y > /dev/null && sudo apt-get upgrade -y > /dev/null
#             sudo apt-get install gcc make xorg libxext-dev libbsd-dev xvfb valgrind libc6-dev libc6-dbg > /dev/null
#             mkdir -p ~/cache-apt
            
#             for dep in gcc make xorg libxext-dev libbsd-dev xvfb valgrind libc6-dbg; do
#                 sudo dpkg -L $dep | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | sudo xargs cp --parents --target-directory ~/cache-apt/
#             done
#             sudo cp /usr/include/math.h --parents --target-directory ~/cache-apt/
#             sudo dpkg -L libc6-dev | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | grep math.h | sudo xargs cp --parents --target-directory ~/cache-apt/
#             sudo dpkg -L libc6-dev | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | grep libm | sudo xargs cp --parents --target-directory ~/cache-apt/
#             sudo dpkg -L libmd-dev | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | grep libmd | sudo xargs cp --parents --target-directory ~/cache-apt/
#           fi

#     - name: make
#       run: make

#     - name: run
#       run: xvfb-run valgrind -q --leak-check=full --show-leak-kinds=all --track-origins=yes ./program.out
