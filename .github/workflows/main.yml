name: main branch CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  install:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: cache apt
      uses: actions/cache@v3
      id: cache-apt
      with:
        path: "~/cache-apt"
        key: cache-apt

    - name: install
      env:
        CACHE_HIT: ${{steps.cache-apt.outputs.cache-hit}}
        MLX_PATH: ./minilibx
      run: |
          if [[ "$CACHE_HIT" == 'true' ]]; then
            echo "cache already exists"
          else
            sudo apt-get update -qq -y
            sudo apt-get install -qq gcc make xorg libxext-dev libbsd-dev xvfb valgrind xdotool
            mkdir -p ~/cache-apt
            for dep in gcc make xorg libxext-dev libbsd-dev xvfb valgrind xdotool libmd-dev libc6-dbg libxdo3; do
                sudo dpkg -L $dep |
                while IFS= read -r f; do if test -f $f; then echo $f; fi; done |
                sudo xargs cp --parents --target-directory ~/cache-apt/
            done
            cd $MLX_PATH && make && sudo bash ./install
            find /usr/local -type f | grep mlx | sudo xargs cp --parents --target-directory ~/cache-apt/
          fi
  build:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: install
    steps:
    - uses: actions/checkout@v3

    - name: cache apt
      uses: actions/cache@v3
      id: cache-apt
      with:
        path: "~/cache-apt"
        key: cache-apt

    - name: install dependencies
      env:
        CACHE_HIT: ${{steps.cache-apt.outputs.cache-hit}}
      run: |
          if [[ "$CACHE_HIT" == 'true' ]]; then
            sudo cp --verbose --force --recursive ~/cache-apt/* /
          else
            false
          fi

    - name: make
      run: make

    - name: run
      env:
        DISPLAY: ":99"
        WINDOW_NAME: "program"
      run: |
        Xvfb $DISPLAY -screen 0 1080x720x24 &
        valgrind -q --error-exitcode=1 --leak-check=full --show-leak-kinds=all --track-origins=yes ./program.out &
        PID=$!
        xdotool search --name $WINDOW_NAME windowfocus key Escape
        wait $PID
